// <auto-generated />
using System;
using Books.API.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Books.API.Migrations
{
    [DbContext(typeof(BooksContext))]
    [Migration("20210203064019_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Books.API.Entities.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Author");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9bea4a18-545c-424c-b75f-16ab31d301f2"),
                            FirstName = "Navid",
                            LastName = "Golforoushan"
                        },
                        new
                        {
                            Id = new Guid("21b8d121-51f4-46be-a27a-e2d2ba71b99a"),
                            FirstName = "Nima",
                            LastName = "Golforoushan"
                        },
                        new
                        {
                            Id = new Guid("3cb59583-746c-4c96-99fe-b09bcf85d2ab"),
                            FirstName = "Ali",
                            LastName = "Jason"
                        },
                        new
                        {
                            Id = new Guid("684e0159-26fb-4f39-a042-b62c372d2fb6"),
                            FirstName = "James",
                            LastName = "Elroy"
                        },
                        new
                        {
                            Id = new Guid("5aac79cf-d273-404d-85ed-96cfd8da9f49"),
                            FirstName = "Douglas",
                            LastName = "Adams"
                        },
                        new
                        {
                            Id = new Guid("1485fb96-39a5-4e89-a3ec-843dffa005bb"),
                            FirstName = "Stephan",
                            LastName = "Fry"
                        },
                        new
                        {
                            Id = new Guid("a2196927-4608-4641-8234-bff1341d846c"),
                            FirstName = "George",
                            LastName = "RR Martin"
                        });
                });

            modelBuilder.Entity("Books.API.Entities.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Books.API.Entities.Book", b =>
                {
                    b.HasOne("Books.API.Entities.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });
#pragma warning restore 612, 618
        }
    }
}
